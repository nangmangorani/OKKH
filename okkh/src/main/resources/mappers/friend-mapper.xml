<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="friendMapper">
 
 <resultMap type="Friend" id="friendResultSet">
 
    <result column="bf_giver"  property="bfGiver"/>
    <result column="bf_taker"  property="bfTaker"/>
    <result column="status"  property="status"/>
    <result column="request_date"  property="requestDate"/>
 
 </resultMap>
 
 
 <resultMap type="Member" id="memberResultSet">
		<result column="mem_no" property="memNo"/>
		<result column="mem_id" property="memId"/>
		<result column="git_nick" property="gitNick"/>
		<result column="avatar_url" property="avatarUrl"/>
		<result column="mem_token" property="memToken"/>
		<result column="mem_intro" property="memIntro"/>
		<result column="stack_name" property="stackName"/>
		<result column="create_date" property="createDate"/>
		<result column="status" property="status"/>
		<result column="team" property="team"/>
		<result column="team_status" property="teamStatus"/>
		<result column="f_status" property="friendStatus"/>
		<result column="me" property="me"/>
		<result column="fri" property="fri"/>
		

	</resultMap>
 
 
 <!-- 특정 회원의 친구 상태가 'Y'(친구) 인 회원들의 목록 조회 -->
 <select id="selectFriendList" resultMap="friendResultSet">
     select 
	        bf_giver
	      , bf_taker
	      , status
	      , to_char(request_date,'YYYY-MM-DD') as "request_date"
	   from friend
	  where bf_taker = #{bfTaker}
        and status = 'Y'
	  order by request_date desc
 
 </select>
 
 <!-- 특정 회원의 친구 목록 개수를 조회하는 쿼리 -->
 <select id="listCount" resultType="_int">
 	select 
 	       count(*)
 	  from friend
 	 where BF_TAKER = #{memNo}      
 </select>



 <!-- 특정 회원의 친구 아님 목록 개수 -->
 <select id="noneFriendListCount" resultType="_int">
 		select 
	 	       count(*)
	 	  from friend
	 	 where BF_TAKER = #{memNo} 
	 	   and status != 'Y'     
 
 </select>
 
 <!-- 특정 회원의 친구아님 목록 -->
 
 <select id="selectNoneFriendList" resultMap="friendResultSet">
 
   select 
	        bf_giver
	      , bf_taker
	      , status
	      , to_char(request_date,'YYYY-MM-DD') as "request_date"
	   from friend
	  where bf_taker = #{bfTaker}
        and status != 'Y'
	  order by request_date desc
 </select>
 
 
 <!-- 모든 회원의 리스트 개수 -->
 <select id="allMemberListCount" resultType="_int">
  select 
         count(*)
    from member     
   where status = 'Y'      
 
 </select>
 
 <!-- 모든 회원 조회 -->
 <select id="selectMemberList" resultMap="memberResultSet">
    select *
		from member
		    left join 
		        (
		        select nvl(a.bf_taker, nvl(b.bf_giver, a.bf_taker)) user_no, a.status ME, b.status FRI
		        from (select * from friend where bf_giver = #{memNo}) a
		        full outer join (select * from friend where bf_taker = #{memNo}) b on (a.bf_taker = b.bf_giver)
		        )
		    on (mem_no = user_no)
		where status = 'Y'
            and (FRI != 'Y' or FRI is null)
		    and user_no != #{memNo}
		    and nvl(ME, FRI) is not null
 </select>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
</mapper>
