<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="repoMapper">

	<resultMap type="MyProject" id="myProjectResult">
		<result column="mypro_no" property="myproNo"/>
		<result column="ref_team_no" property="refTeamNo"/>
		<result column="mypro_title" property="myproTitle"/>
		<result column="mypro_type" property="myproType"/>
		<result column="mypro_member" property="myproMember"/>
		<result column="mypro_status" property="myproStatus"/>
	</resultMap>
	
	<resultMap type="Member" id="memberResult">
		<result column="mem_id" property="memId"/>
	</resultMap>
	
	<resultMap type="Repo" id="repoResult">
		<result column="" property=""/>
	</resultMap>
	
	<select id="selectMyProjectList" resultMap="myProjectResult">
		select
		       mypro_no
		     , ref_team_no
		     , mypro_title
		     , mypro_type
		     , mypro_member
		     , mypro_status
		  from my_project p
		 where mypro_member like '%' || #{memId} || '%'
		   and status = 'Y'
		 order
    		by mypro_no desc
	</select>
	
	<select id="selectTeamMateList" resultMap="memberResult">
		select 
		       mem_id
		  from member
		 where team_no = (
		                 select 
		                        team_no
		                   from member
		                  where mem_no = #{memNo}
		                 )
		   and team_status = 'Y'
	</select>
	
	<insert id="insertMyProject">
		insert
		  into my_project
		     ( 
		       mypro_no	
		     , ref_team_no
		     , mypro_title
		     , mypro_type
		     , mypro_member
		     )
		values
		     (
		       seq_mypro.nextval
		     , #{refTeamNo}
		     , #{myproTitle}
		     , #{myproType}  
		     , #{myproMember}
		     )
	</insert>
	
	<select id="selectMyProjectTitle" resultMap="myProjectResult">
		select 
			   distinct(mypro_title) as "mypro_title"
		  from repo
		  join my_project on (ref_pno = mypro_no)
		 where ref_pno = #{myproNo}
	</select>

</mapper>